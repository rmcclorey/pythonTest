import sys
import operator
import requests
import json
import twitter
from watson_developer_cloud import PersonalityInsightsV2 as PersonalityInsights


def analyze(handle):
  twitter_consumer_key = '2sUnWz5UYnAkXjoXMHFq46Dq2'  
  twitter_consumer_secret = 'eD35ZcrfAx9LwQYBnj6LVBPB5ioh5FMztZD8R0ar79WgZz8Vti'  
  twitter_access_token = '1634560525-IwcOP7TsVufSAny4IrxB68KoW5i3zyqnwrNlFy4'  
  twitter_access_secret = '5SqBd2vwgF91iccyRBjnQiBS8IIyxnGNIDZyEAVmfwMrl'

  twitter_api = twitter.Api(consumer_key=twitter_consumer_key, consumer_secret=twitter_consumer_secret, access_token_key=twitter_access_token, access_token_secret=twitter_access_secret)

  statuses = twitter_api.GetUserTimeline(screen_name=handle,count=200,include_rts=False)

  text = ""

  for status in statuses:
    if(status.lang=='en'): 
      text += status.text.encode('utf-8')

  pi_username = '390771ac-1dc0-4c32-95ab-3e7618eed14f'
  pi_password = 'Lx1g5wJkSFtG'

  personality_insights = PersonalityInsights(username=pi_username,password=pi_password)
  pi_result = personality_insights.profile(text)
  return pi_result

def flatten(orig):
    data = {}
    for c in orig['tree']['children']:
        if 'children' in c:
            for c2 in c['children']:
                if 'children' in c2:
                    for c3 in c2['children']:
                        if 'children' in c3:
                            for c4 in c3['children']:
                                if (c4['category'] == 'personality'):
                                    data[c4['id']] = c4['percentage']
                                    if 'children' not in c3:
                                        if (c3['category'] == 'personality'):
                                                data[c3['id']] = c3['percentage']
    return data

def compare(dict1, dict2):
  compared_data = {}
  for keys in dict1:
      if dict1[keys] != dict2[keys]:
              compared_data[keys]=abs(dict1[keys] - dict2[keys])
  return compared_data

  
user_handle = "@thomasconnector"
celebrity_handle = "@_sunahh"

user_result = analyze(user_handle)
celebrity_result = analyze(celebrity_handle)

user = flatten(user_result)
celebrity = flatten(celebrity_result)

compared_results = compare(user,celebrity)

sorted_result = sorted(compared_results.items(), key=operator.itemgetter(1))

for keys, value in sorted_result[:5]:
    print keys,
    print(user[keys]),
    print ('->'),
    print (celebrity[keys]),
    print ('->'),
    print (compared_results[keys])
